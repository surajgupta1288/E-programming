/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2020-03-01 12:11:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class notes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<body>\n");
      out.write("<img src=\"noteslogo.png\" align=\"top\" width=\"300\" height=\"100\">\n");
      out.write("<img src=\"notes.jpg\" width=\"150\" height=\"100\">\n");
      out.write("<img src=\"remember.jpg\" align=\"top\" width=\"300\" height=\"100\">\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<hr color=DeepSkyBlue>\n");
      out.write("<hr color=blue>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("p{\n");
      out.write("margin-left:300px;\n");
      out.write("}\n");
      out.write("*{\n");
      out.write("padding:0px;\n");
      out.write("margin:0px;\n");
      out.write("}\n");
      out.write("div{\n");
      out.write("width:250px;\n");
      out.write("height:666px;\n");
      out.write("background:#1A8DA9;\n");
      out.write("}\n");
      out.write("div a{\n");
      out.write("text-decoration:none;\n");
      out.write("color:white;\n");
      out.write("padding:20px;\n");
      out.write("padding-right:100px;\n");
      out.write("}\n");
      out.write("div ul li{\n");
      out.write("list-style-type:none;\n");
      out.write("display:block;\n");
      out.write("padding:15px;\n");
      out.write("border-bottom:2px solid #236D7F;\n");
      out.write("}\n");
      out.write("div ul li:hover{\n");
      out.write("background:white;\n");
      out.write("transition:linear all 0.40s;\n");
      out.write("margin-left:10px\n");
      out.write("}\n");
      out.write("div ul li a:hover{\n");
      out.write("color:black;\n");
      out.write("}\n");
      out.write(".selected{\n");
      out.write("background:white;\n");
      out.write("}\n");
      out.write(".selected a{\n");
      out.write("color:black;\n");
      out.write("}\n");
      out.write(".navmenu{\n");
      out.write("float:left;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Notes</title>\n");
      out.write("<body>\n");
      out.write("<div class=\"navmenu\">\n");
      out.write("<nav>\n");
      out.write(" <ul>\n");
      out.write(" <li ><a href=\"home1.jsp\"><b>HOME</b></a></li>\n");
      out.write(" <li class=\"selected\">Introduction</li>\n");
      out.write("\n");
      out.write("<li><a href=\"cnotes.jsp\"><b>C-</b>Notes</a></li>\n");
      out.write("<li><a href=\"c++notes.jsp\"><b>C++-</b>Notes</a></li>\n");
      out.write("<li><a href=\"javanotes.jsp\"><b>JAVA-</b>Notes</a></li>\n");
      out.write("<li><a href=\"htmlnotes.jsp\"><b>HTML-</b>Notes</a></li>\n");
      out.write("<li><a href=\"cssnotes.jsp\"><b>CSS-</b>Notes</a></li>\n");
      out.write("<li ><a href=\"LoginRegister.html\"><b>Logout</b></a></li>\n");
      out.write("<li ><a href=\"aboutus.html\"><b>About Us</b></a></li>\n");
      out.write("<li ><a href=\"contactus.html\"><b>Contact Us</b></a></li>\n");
      out.write("</ul>\n");
      out.write("</nav>\n");
      out.write("</div>\n");
      out.write("<h3>PDF Technology Notes</h3><br><h3>Introduction</h3><br><p >The Portable Document Format (PDF) is a file format for representing documents in a manner independent of the application software, hardware, and operating system used to create them, as well as of the output device on which they are to be displayed or printed. PDF files specify the appearance of pages in a document in a reliable, device-independent manner. The PDF specification was introduced by Adobe Systems in 1993 as a publicly available standard. In July 2008, PDF 1.7 became an ISO standard (ISO 32000-1).</p><p>Of note for accessibility is PDF/UA (Universal Accessibility) which became an ISO Standard in July 2012, and was updated in 2014 (ISO 14289-1:2014 . The scope of PDF/UA is not meant to be a techniques (how-to) specification, but rather a set of guidelines for creating more accessible PDF. The specification describes the required and prohibited components and the conditions governing their inclusion in or exclusion from a PDF file in order for the file to be available to the widest possible audience, including those with disabilities. The mechanisms for including the components in the PDF stream are left to the discretion of the individual developer, PDF generator, or PDF viewing agent. PDF/UA also specifies the rules governing the behavior for a conforming reader. </p><br><br><h3> PDF Accessibility Support</h3><br><p>PDF includes several features in support of accessibility of documents\n");
      out.write("  \t\t\t\tto users with disabilities. The core of this support lies in the ability\n");
      out.write("  \t\t\t\tto determine the logical order of content in a PDF document, independently\n");
      out.write("  \t\t\t\tof the content's appearance or layout, through logical structure and\n");
      out.write("  \t\t\t\tTagged PDF. Applications can extract the content of\n");
      out.write("  \t\t\t\ta document for presentation to users with disabilities by traversing\n");
      out.write("  \t\t\t\tthe structure hierarchy and presenting the contents of each node. For\n");
      out.write("  \t\t\t\tthis reason, producers of PDF files must ensure that all information\n");
      out.write("  \t\t\t\tin a document is reachable by means of the structure hierarchy. </p><br><br><h3>Logical Structure</h3><br><p>PDF's logical structure features (introduced in PDF 1.3) provide a\n");
      out.write("  \t\t\t\tmechanism for incorporating structural information about a document's\n");
      out.write("  \t\t\t\tcontent into a PDF file. Such information might include, for example,\n");
      out.write("  \t\t\t\tthe organization of the document into chapters, headings, paragraphs\n");
      out.write("  \t\t\t\tand sections or the identification of special elements such as figures,\n");
      out.write("  \t\t\t\ttables, and footnotes. The logical structure features are extensible,\n");
      out.write("  \t\t\t\tallowing applications that produce PDF files to choose what structural\n");
      out.write("  \t\t\t\tinformation to include and how to represent it, while enabling PDF\n");
      out.write("  \t\t\t\tconsumers to navigate a file without knowing the producer's structural\n");
      out.write("  \t\t\t\tconventions. </p><br><p>PDF logical structure shares basic features with standard document\n");
      out.write("  \t\t\t\tmarkup languages such as HTML, SGML, and XML. A document's logical\n");
      out.write("  \t\t\t\tstructure is expressed as a hierarchy of structure elements, each represented\n");
      out.write("  \t\t\t\tby a dictionary object. Like their counterparts in other markup languages,\n");
      out.write("  \t\t\t\tPDF structure elements can have content and attributes. In PDF, rendered\n");
      out.write("  \t\t\t\tdocument content takes over the role occupied by text in HTML, SGML,\n");
      out.write("  \t\t\t\tand XML. \n");
      out.write("  </body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(" </html>\n");
      out.write("   ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
